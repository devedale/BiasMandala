# ===========================================
# SCAF Configuration System
# ===========================================

# Main Configuration File: config/scaf_config.yaml

framework:
  name: "Semantic Coherence Analysis Framework"
  version: "1.0.0"
  mode: "production"  # development | production | research

# Pipeline Configuration
pipeline:
  stages:
    - name: "parser"
      type: "FormalLanguageParser"
      config:
        supported_languages:
          - latex
          - mermaid
          - uml
          - graphviz
        timeout: 30
        max_depth: 100
      dependencies: []
    
    - name: "ast_extractor"
      type: "ASTExtractor"
      config:
        optimization_level: 2
        preserve_comments: false
        normalize: true
      dependencies: ["parser"]
    
    - name: "topology_analyzer"
      type: "TopologicalInvariantAnalyzer"
      config:
        compute_betti: true
        compute_persistence: true
        max_dimension: 3
        filtration:
          type: "vietoris-rips"
          max_edge_length: 2.0
      dependencies: ["ast_extractor"]
    
    - name: "semantic_mapper"
      type: "SemanticSpaceMapper"
      config:
        embedding_model: "bert-base"
        dimensions: 768
        normalize_embeddings: true
      dependencies: ["ast_extractor"]
    
    - name: "bias_detector"
      type: "MechanisticBiasDetector"
      config:
        detection_methods:
          - "circuit_decomposition"
          - "attention_pattern_analysis"
          - "causal_intervention"
        threshold: 0.6
        ablation_steps: 10
      dependencies: ["topology_analyzer", "semantic_mapper"]
    
    - name: "validator"
      type: "DeterministicValidator"
      config:
        validation_strategy: "compiled_ground_truth"
        cache_size: 10000
        parallel_validation: true
      dependencies: ["bias_detector"]

# Invariant Metrics Configuration
invariants:
  weights:
    topological: 0.35
    geometric: 0.30
    semantic: 0.35
  
  topological_metrics:
    - name: "betti_numbers"
      weight: 0.4
    - name: "euler_characteristic"
      weight: 0.2
    - name: "persistent_homology"
      weight: 0.4
  
  geometric_metrics:
    - name: "curvature"
      weight: 0.3
    - name: "distance_preservation"
      weight: 0.4
    - name: "angle_preservation"
      weight: 0.3
  
  semantic_metrics:
    - name: "cosine_similarity"
      weight: 0.5
    - name: "contextual_coherence"
      weight: 0.5

# Multi-Scale Topology Configuration
multi_scale_topology:
  # Defines the strategy for multi-scale analysis.
  # Available options: "filtration", "graph_decomposition"
  strategy: "filtration"

  # Configuration for the 'filtration' strategy.
  # Used when analyzing point cloud data.
  filtration_config:
    min_radius: 0.5
    max_radius: 5.0
    steps: 10

  # Configuration for the 'graph_decomposition' strategy.
  # Used when analyzing graph data.
  graph_decomposition_config:
    # Currently uses k-core decomposition, which doesn't require extra params,
    # but we can add placeholders for future extensions (e.g., community detection resolution).
    placeholder: "value"

# Topological-Semantic Fusion Configuration
fusion:
  # Defines the strategy for fusing topological and semantic features.
  # Available options: "concatenation", "autoencoder"
  strategy: "concatenation"

  # Configuration for the 'autoencoder' strategy.
  autoencoder_config:
    # Path to a pre-trained autoencoder model. If null, the strategy
    # will fall back to a simpler method.
    model_path: null # e.g., "/path/to/fusion_model.pth"

# Bias Detection Configuration
bias_detection:
  types:
    - name: "topological_bias"
      detector: "TopologicalBiasDetector"
      severity_threshold: 0.7
      intervention_strategy: "topology_correction"
    
    - name: "semantic_drift"
      detector: "SemanticDriftDetector"
      severity_threshold: 0.6
      intervention_strategy: "semantic_anchoring"
    
    - name: "geometric_distortion"
      detector: "GeometricDistortionDetector"
      severity_threshold: 0.65
      intervention_strategy: "geometric_realignment"
    
    - name: "computational_shortcut"
      detector: "ComputationalShortcutDetector"
      severity_threshold: 0.5
      intervention_strategy: "resource_reallocation"
  
  causal_model:
    nodes:
      - "token_budget"
      - "attention_distribution"
      - "layer_activation"
      - "topological_complexity"
      - "semantic_ambiguity"
    
    edges:
      - from: "token_budget"
        to: "computational_shortcut"
        weight: 0.8
      - from: "topological_complexity"
        to: "geometric_distortion"
        weight: 0.7
      - from: "semantic_ambiguity"
        to: "semantic_drift"
        weight: 0.9

# Meta-Learning Configuration
meta_learning:
  enabled: true
  learning_rate: 0.01
  batch_size: 32
  
  patch_bank:
    max_patches_per_type: 1000
    similarity_threshold: 0.85
    effectiveness_decay: 0.95
  
  active_learning:
    strategy: "uncertainty_sampling"
    query_budget: 100
    confidence_threshold: 0.9

# Resource Management
resources:
  cache:
    type: "lru"
    max_size_mb: 1024
    ttl_seconds: 3600
  
  parallel_processing:
    enabled: true
    max_workers: 8
    chunk_size: 100
  
  memory_limits:
    max_ast_nodes: 100000
    max_graph_edges: 1000000
    max_embedding_batch: 512

# Monitoring & Logging
monitoring:
  metrics_collection:
    enabled: true
    interval_seconds: 60
    exporters:
      - type: "prometheus"
        endpoint: "localhost:9090"
      - type: "file"
        path: "/var/log/scaf/metrics.json"
  
  logging:
    level: "INFO"
    format: "json"
    outputs:
      - "console"
      - "file:/var/log/scaf/scaf.log"
  
  tracing:
    enabled: true
    sample_rate: 0.1
    exporter: "jaeger"
    endpoint: "localhost:6831"

# Extension Points
extensions:
  custom_analyzers:
    - module: "extensions.custom_latex"
      class: "AdvancedLaTeXAnalyzer"
    - module: "extensions.mermaid_analyzer"
      class: "MermaidDiagramAnalyzer"
  
  custom_validators:
    - module: "extensions.math_validator"
      class: "MathematicalProofValidator"
  
  custom_transforms:
    - module: "extensions.quantum_transform"
      class: "QuantumCircuitTransform"

# Experimental Features
experimental:
  quantum_bias_detection:
    enabled: false
    backend: "qiskit"
  
  neural_architecture_search:
    enabled: false
    search_space: "darts"
  
  federated_learning:
    enabled: false
    aggregation_strategy: "fedavg"

